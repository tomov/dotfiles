#i f not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) ;&
    rxvt-256color) color_prompt=yes;;
esac

#if [ -f /usr/share/git/completion/git-prompt.sh ] && ! shopt -oq posix; then
#    source /usr/share/git/completion/git-prompt.sh
#fi
#GIT_PS1_SHOWDIRTYSTATE=true
#GIT_PS1_SHOWSTASHSTATE=true

if [ "$color_prompt" = yes ]; then
    PS1='\[\e[0;32m\]\u\[\e[0;36m\]@\[\e[0;38m\]\h\[\e[m\] \[\e[1;34m\]\W\[\e[m\]\[\033[00;34m\]$(__git_ps1 " [%s]")\[\e[1;32m\] \$\[\e[m\] '
else
    PS1='\u@\h \W$(__git_ps1 " [%s]") \$ '
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

#bind '"\e[A": history-search-backward'
#bind '"\e[B": history-search-forward'

export PATH_TO_MEMSQL="/home/$USER/memsql"
export CXX="ccache $PATH_TO_MEMSQL/objdir/usr/local/bin/memsql-g++  \
            -std=c++0x -isystem $PATH_TO_MEMSQL/objdir/usr/include  \
            -L$PATH_TO_MEMSQL/objdir/usr/local/lib64 -I/usr/include"
export LD_LIBRARY_PATH=$PATH_TO_MEMSQL/objdir/usr/local/lib64:/home/$USER/llvm/lib/:$LD_LIBRARY_PATH
export PYTHONPATH=$PATH_TO_MEMSQL/py:$PYTHONPATH
export PATH=~/arcanist/bin:~/psyduck/bin:$PATH_TO_MEMSQL/utils/private:$PATH
alias memsql='mysql -h 127.0.0.1 -u root --prompt="memsql> "'
alias mem='mysql -h 127.0.0.1 -u root --prompt="memsql> "'
alias my='mysql -h 127.0.0.1 --socket=/var/run/mysqld/mysqld.sock -u root --port 3307'
alias single='cgdb --args ./memsqld'
alias distributed='cgdb --args ./memsqld --master-aggregator --default-partitions-per-leaf=3 --transaction-buffer=1m'
alias cmdebug='find . -name "CMakeCache.txt" | xargs rm -f && cmake . -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON'
alias c_d='rm -r data/* tracelogs/*'
alias c_p='rm -r plancache/*'
alias c_b='rm -r bincache/*'
alias c='c_d ; c_p ; c_b'
alias make='make -j9'
alias t='python t.py'
alias mrp='$PATH_TO_MEMSQL/utils/private/mrp'
alias gitgraph='git log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"'
alias cmretail='find . -name "CMakeCache.txt" | xargs rm -f && cmake . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON'

alias remake='/home/vagrant/memsql/remake.sh'
alias rerun='/home/vagrant/memsql/rerun.sh'
alias m='/home/vagrant/memsql/makeplace.sh'
alias clean="rm -rf $PATH_TO_MEMSQL/plancache/*; rm -rf $PATH_TO_MEMSQL/data/snapshots/*; rm -rf $PATH_TO_MEMSQL/data/logs/*; rm -rf $PATH_TO_MEMSQL/data/columns/* ; rm $PATH_TO_MEMSQL/tracelogs/memsql.log"

export PATH=/home/vagrant/tmux:$PATH
export TERM="xterm-256color"

unset LD_LIBRARY_PATH

export PATH=/home/vagrant/NO_NAME/downloads/q/l32:$PATH
export QHOME=/home/vagrant/NO_NAME/downloads/q

# for sphinx
export PATH="$HOME/.linuxbrew/bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

export VISUAL=vim
export EDITOR="$VISUAL"

export AWS_ACCESS_KEY=AKIAILRXJADXIGZMTKQA
export AWS_SECRET_KEY=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

